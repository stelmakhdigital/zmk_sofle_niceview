/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt {
    tapping-term-ms = <600>;
    quick-tap-ms = <(-1)>;
    require-prior-idle-ms = <(-1)>;
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        EscKey {
            bindings = <&kp ESC>;
            key-positions = <0 12>;
            timeout-ms = <100>;
            layers = <0>;
        };

        TildaSign {
            bindings = <&kp TILDE>;
            key-positions = <23 35>;
            layers = <0>;
            timeout-ms = <25>;
        };

        GraveSign {
            bindings = <&kp GRAVE>;
            key-positions = <35 49>;
            layers = <0>;
            timeout-ms = <25>;
        };

        PlusSign {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
            layers = <0>;
            timeout-ms = <25>;
        };

        MinusSign {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
            timeout-ms = <25>;
            layers = <0>;
        };

        ParaLeft {
            bindings = <&kp LPAR>;
            key-positions = <17 16>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CommaSign {
            bindings = <&kp COMMA>;
            key-positions = <4 5>;
            timeout-ms = <25>;
            layers = <0>;
        };

        BracketLeft {
            bindings = <&kp LBKT>;
            key-positions = <29 28>;
            timeout-ms = <25>;
            layers = <0>;
        };

        BraceLeft {
            bindings = <&kp LBRC>;
            key-positions = <41 40>;
            timeout-ms = <25>;
            layers = <0>;
        };

        ParaRight {
            bindings = <&kp RPAR>;
            key-positions = <18 19>;
            timeout-ms = <25>;
            layers = <0>;
        };

        BracketRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
            timeout-ms = <25>;
            layers = <0>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <44 45>;
            layers = <0>;
            timeout-ms = <25>;
        };

        UnderscoreSign {
            bindings = <&kp UNDER>;
            key-positions = <7 8>;
            timeout-ms = <25>;
            layers = <0>;
        };

        DotSign {
            bindings = <&kp DOT>;
            key-positions = <6 7>;
            timeout-ms = <25>;
            layers = <0>;
        };

        PipeSign {
            bindings = <&kp PIPE>;
            key-positions = <9 8>;
            timeout-ms = <25>;
            layers = <0>;
        };

        CAPSLO {
            bindings = <&kp CLCK>;
            key-positions = <12 24>;
            layers = <0>;
            timeout-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE       &kp N1  &kp N2      &kp N3        &kp N4      &kp N5                                    &kp N6     &kp N7         &kp N8     &kp N9         &kp N0    &kp MINUS
&kp TAB         &kp Q   &kp W       &kp E         &kp R       &kp T                                     &kp Y      &kp U          &kp I      &kp O          &kp P     &kp EQUAL
&kp LEFT_SHIFT  &kp A   &kp S       &kp D         &kp F       &kp G                                     &kp H      &kp J          &kp K      &kp L          &kp SEMI  &mt RIGHT_SHIFT SQT
&kp LCTRL       &kp Z   &kp X       &kp C         &kp V       &kp B      &kp C_MUTE    &rgb_ug RGB_TOG  &kp N      &kp M          &kp COMMA  &kp DOT        &kp FSLH  &mt RCTRL BACKSLASH
                        &kp ESCAPE  &kp LEFT_GUI  &kp DELETE  &mo LOWER  &kp SPACE     &kp ENTER        &mo RAISE  &kp BACKSPACE  &kp RGUI   &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans       &trans    &trans     &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans        &trans      &trans     &trans       &trans       &trans                    &trans     &trans    &trans    &trans     &trans   &trans
&trans        &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans                    &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp N0   &trans
&kp CAPSLOCK  &trans      &trans     &trans       &trans       &trans                    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans        &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans  &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                          &trans     &trans       &trans       &trans  &trans    &trans  &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none         &none         &none         &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none         &none         &none         &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none         &none         &none         &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none         &none         &none         &none
            >;
        };
    };
};
